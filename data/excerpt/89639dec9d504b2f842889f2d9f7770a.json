{"title": "No.20第四十二天到第四十三天：开一家餐厅吧（一）", "topic": "前端", "time": 1665475532, "label": [], "markdown": "作业提交截止时间：09-01\n\n# 第四十二天到第四十三天：开一家餐厅吧（一）\n\n## 课程目标\n\n通过一个新的系列课程，我们来学习更多的JavaScript知识，比如如何在JavaScript使用面向对象编程，如何在你的设计中应用设计模式.\n\n## 课程描述\n\n### 需求\n\n我们现在要开一个餐厅啦，餐厅里面有服务员，有厨师，有顾客。学习面向对象，为餐厅和几个角色创建自己的类吧。\n\n餐厅可以招聘或者解雇职员，职员越多，就越能够满足更多的顾客需求，从而赚取更多的钱\n\n餐厅里的容量是有限的，当顾客坐满了，其他顾客需要排队\n\n服务员的工作有两个职责，一个是负责点菜，另外一个是上菜\n\n厨师的职责就一个，烹饪食物\n\n顾客可以做两件事情，一个是点菜，一个是吃\n\n系列任务的第一个部分，我们先只实现类的编写。并通过大量阅读掌握JavaScript的面向对象编程\n\n### 阅读\n\n  * [MDN 适合初学者的JavaScript面向对象](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object-oriented_JS)\n  * [MDN 对象原型](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes)\n  * [MDN JavaScript 中的继承](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Inheritance)\n  * [MDN 实践对象构造](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object_building_practice)\n  * [MDN JavaScript面向对象编程](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript)\n  * [深入理解Javascript面向对象编程](http://www.cnblogs.com/tugenhua0707/p/5068449.html)\n  * [JS 面向对象之继承---多种组合继承详解 ](http://www.jb51.net/article/88295.htm)\n  * [Javascript面向对象三大特性（封装性、继承性、多态性）详解及创建对象的各种方法](https://www.cnblogs.com/yanayana/p/6781166.html)\n\n### 设计\n\n下面的设计只是草案，根据自己理解和需要自行设计\n\n  * 餐厅类\n    * 属性：金钱，座位数量、职员列表\n    * 方法：招聘职员，解雇职员\n  * 职员类\n    * 属性：ID，姓名，工资\n    * 方法：完成一次工作\n  * 服务员类，继承自职员\n    * 完成一次工作：如果参数是个数组，则记录客人点菜，如果参数不是数组则是上菜行为\n  * 厨师类，继承自职员\n    * 完成一次工作：烹饪出菜品\n  * 顾客类\n    * 方法：点菜，吃\n  * 菜品类\n    * 属性：名字、烹饪成本、价格\n\n### 编码\n\n  * 请分别使用 ES5 和 ES6 来实现以上类的定义\n\n### 测试用例\n\n测试用例伪代码，在Chrome控制台中执行\n\n    \n    \n    var ifeRestaurant = new Restaurant({\n        cash: 1000000,\n        seats: 20,\n        staff: []\n    });\n    \n    var newCook = new Cook(\"Tony\", 10000);\n    ifeRestaurant.hire(newCook);\n    \n    console.log(ifeRestaurant.staff);\n    \n    ifeRestaurant.fire(newCook);\n    console.log(ifeRestaurant.staff);\n    \n\n### 提交\n\n把你的代码放在Github后进行提交\n\n### 总结\n\n依然把今天的学习用时，收获，问题进行记录\n\n### 下一个任务预告\n\n明天我们继续该任务的下一个环节\n\n"}