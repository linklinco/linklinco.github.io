{"title": "ES6 模块", "topic": null, "time": "2025-04-24 19:32:59", "label": [], "needPassword": false, "text": "ES6 模块\n\n导出模块使用export\n\n```\nclass A {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n        this.he = this.sum();\n    }\n    sum() {\n        console.log(1);\n        return this.x + this.y;\n    }\n};\nclass B extends A {\n    constructor(x, y, z) {\n        super(x, y);\n        this.z = z;\n    }\n}\n\nexport { A, B };\n```\n\n导入模块 使用import \n\n```\nimport { B, A } from './daochu.js';\n\nvar c = new A(5, 6, 7);\nconsole.log(c.he);\n```\n\n ### node全局对象 `global`\n\n类似浏览器中的全局对象`window` ，node中唯一全局对象是`global`\n\nprocess对象 代表当前nodejs进行\n\n```\nprocess.version //获取当前node版本\nprocess.platform //获取当前平台\nprocess.arch //获取当前架构信息\nprocess.cwd() //返回当前工作目录\nprocess.chdir() //切换当前工作目录\n```\n\n判断代码是在浏览器环境还是在node环境\n\n```\nif(typeof(window) === 'undefined'){\nconsole.log('node.js');\n}else{\nconsole.log('browser');\n}\n```\n\n`fs`模块\n\n异步读取\n\n```\nvar fs = require('fs');\n//异步读取文件，成功err参数为null，data参数为读取到的String。失败err参数则为一个错误对象，data为undefined \nfs.readFile('1.txt','utf-8',(err,data)=>{\nif(err){\nconsole.log(err);\n}else{\nconsole.log(data);\n}\n})\n//如果读取的是二进制数据，data返回的是这个`Buffer`对象，Buffer对象可以转为String对象，string对象也可以转为Buffer对象\nBuffer.from(text,'utf-8')\n```\n\n同步读取\n\n```\nvar data = fs.readFileSync('1.txt','utf-8');\nconsole.log(data);\n```\n\n异步写文件\n\n```\nfs.writeFile('2.txt',data,(err)=>{//处理错误})\n//String对象utf8编码写入，Buffer对象按二进制写入\n```\n\n同步写文件\n\n```\nfs.writeFileSync('2.txt',data)\n```\n\n`stat`获取文件信息\n\n```\nfs.stat('1.txt',(err,stat)=>{\nif(err){\n//处理错误\n}else{\nstat.isFile() //判断是否是文件\nstat.isDirectory() //判断是否是文件夹\nif(stat.isFile()){\nstat.size //返回文件大小\nstat.birthtime //返回创建时间\nstat.mtime //返回修改时间\n}\n}\n})\n```\n\nstat()也有一个对应的同步函数statSync()\n\n```\nvar stat = fs.statSync('1.txt')\n```\n\n\n\n\n\n\n\n\n\n\n\n"}