{"title": "No.19第三十九天到第四十一天：我是精明的小卖家（四）", "topic": "前端", "time": 1666251965, "label": [], "markdown": "作业提交截止时间：09-01\n\n# 第三十九天到第四十一天：我是精明的小卖家（四）\n\n## 课程目标\n\n今天我们将进行这个任务系列的最后一课，学习Location，Hash等相关知识，来实现最后一个需求\n\n## 课程描述\n\n### 先来点简单的\n\n#### 阅读\n\n  * [W3School Location](http://www.w3school.com.cn/jsref/dom_obj_location.asp)\n  * [location.hash详解](https://blog.csdn.net/baidu_31333625/article/details/54288223)\n  * [MDN onhashchange](https://developer.mozilla.org/zh-CN/docs/Web/API/Window/onhashchange)\n\n#### 需求\n\n    \n    \n    <button id=\"a\">A</button>\n    <button id=\"b\">B</button>\n    <button id=\"c\">C</button>\n    <div id=\"cont\"></div>\n    \n\n  * 基于以上HTML，点击对应按钮时候，改变div中的内容为按钮的文字。\n  * 刷新页面的时候，保持div中的显示\n  * 页面URL copy再打开后，保留渲染状态\n  * 通过location.hash来实现\n\n#### 设计\n\n按照传统思路，我们会给3个按钮绑定一个事件，事件中来改变id为cont的div中的内容，但在这个小任务中，我们需要改变一下逻辑。\n\n这个需求中的关键，其实是在于通过URL中#后面的部分，来记录页面的状态，页面的渲染是由这个状态来驱动的。所以，点击按钮的时候，应该去做的事情，是更新这个状态。\n\n然后对于状态改变这件事情，增加一个事件响应，来进行渲染。所以整个伪代码变为：\n\n    \n    \n    function 解析Hash，获取状态参数() {\n        取到需要的值，并返回\n    }\n    \n    function 渲染函数() {\n        内容 = 解析Hash，获取状态参数()\n        cont的innerHTML = 内容\n    }\n    \n    按钮点击事件 = function() {\n        设置新的hash\n    }\n    \n    window.onhashchange = 渲染函数\n    \n    进来先执行一次渲染函数()\n    \n\n按照上面的基本思想进行代码的编写吧\n\n### 稍微复杂一点\n\n#### 需求\n\n    \n    \n    <button id=\"a\">A</button>\n    <button id=\"b\">B</button>\n    <button id=\"c\">C</button>\n    \n    <button id=\"d\">D</button>\n    <button id=\"e\">E</button>\n    <button id=\"f\">F</button>\n    \n    \n    <div id=\"contABC\"></div>\n    <div id=\"contDEF\"></div>\n    \n\n现在我们需要记录两个状态\n\n  * abc点击了，把按钮文字显示在contABC中\n  * def点击了，把按钮文字显示在contDEF中\n  * 同样在页面刷新时，保留之前的渲染状态\n  * 页面URL copy再打开后，保留渲染状态\n\n#### 设计\n\n思路和前面一样，只是在获取状态参数的地方稍微复杂一点点，相信你能搞定的\n\n### 正式来做报表的事情了\n\n现在通过hash的方式\n\n  * 把用户的一些交互状态通过某种方式记录在URL中\n  * 分享或再次打开某个URL，需要从URL中读取到数据状态，并且进行页面呈现的还原\n  * 需要记录的状态包括：产品的选择以及地域的选择\n\n### 来学习一下 pushState\n\n#### 阅读\n\n  * [ajax与HTML5 history pushState/replaceState实例](http://www.zhangxinxu.com/wordpress/2013/06/html5-history-api-pushstate-replacestate-ajax/)\n  * [H5，API的pushState()，replaceState()和popstate()作用，用法](https://blog.csdn.net/qq_31411389/article/details/60335817)\n  * [MVVM静态路由和动态路由](https://www.jianshu.com/p/21b90b47eb41)\n\n#### 编码\n\n用pushState等代替前面直接操作hash的方式，来实现前面2个小需求及报表页面的需求\n\n### 提交\n\n把你的代码放在Github后进行提交\n\n### 总结\n\n依然把今天的学习用时，收获，问题进行记录\n\n### 下一个任务预告\n\n下一个任务将是全新的一个系列任务，敬请期待\n\n"}